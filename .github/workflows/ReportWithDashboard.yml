name: Unified Build with Allure and Dashboard

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "30 12 * * *"   # Daily at 6 PM IST
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run workflow from"
        required: true
        default: "main"
      environment:
        description: "Target environment"
        required: true
        default: "QA"
      browser:
        description: "Browser to use"
        required: true
        default: "chrome"
      tags:
        description: "Cucumber/TestNG tags"
        required: false
        default: "@regression"
      suite:
        description: "TestNG suite file"
        required: false
        default: "suite.xml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages

      - name: Read and increment build number
        id: buildnum
        run: |
          BUILD_FILE="gh-pages/build-number.txt"
          if [ -f "$BUILD_FILE" ]; then
            BUILD_NUM=$(cat "$BUILD_FILE")
          else
            BUILD_NUM=0
          fi
          NEW_BUILD_NUM=$((BUILD_NUM + 1))
          echo "$NEW_BUILD_NUM" > "$BUILD_FILE"
          echo "build_number=$NEW_BUILD_NUM" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Clean Allure directories
        run: rm -rf target/allure-results target/allure-report || true

      - name: Run Tests and Capture Status
        id: teststatus
        run: |
          mvn clean test \
            -Denv=${{ github.event.inputs.environment || 'QA' }} \
            -Dbrowser=${{ github.event.inputs.browser || 'chrome' }} \
            -Dcucumber.filter.tags="${{ github.event.inputs.tags || '@regression' }}" \
            -Dsurefire.suiteXmlFiles=${{ github.event.inputs.suite || 'suite.xml' }}
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.zip
          unzip allure-2.29.0.zip -d /opt/
          echo "/opt/allure-2.29.0/bin" >> $GITHUB_PATH

      - name: Generate Allure Report
        if: always()
        run: |
          mkdir -p target/allure-report
          allure generate target/allure-results -o target/allure-report --clean

      - name: Create metadata for dashboard
        run: |
          mkdir -p target/allure-report-build-${{ steps.buildnum.outputs.build_number }}
          STATUS_EMOJI="❌"
          if [ "${{ steps.teststatus.outputs.status }}" == "0" ]; then STATUS_EMOJI="✅"; fi
          echo '{
            "build": "${{ steps.buildnum.outputs.build_number }}",
            "date": "'$(date +'%Y-%m-%d')'",
            "status": "'"$STATUS_EMOJI"'",
            "environment": "${{ github.event.inputs.environment || 'QA' }}",
            "browser": "${{ github.event.inputs.browser || 'chrome' }}"
          }' > target/allure-report-build-${{ steps.buildnum.outputs.build_number }}/metadata.json

      - name: Prepare gh-pages publish folder
        run: |
          mkdir -p target/gh-pages-publish
          cp -r target/allure-report target/gh-pages-publish/build-${{ steps.buildnum.outputs.build_number }}
          cp target/allure-report-build-${{ steps.buildnum.outputs.build_number }}/metadata.json target/gh-pages-publish/build-${{ steps.buildnum.outputs.build_number }}/metadata.json
          cp gh-pages/build-number.txt target/gh-pages-publish/build-number.txt

          cd gh-pages
          find . -maxdepth 1 -type d -name "build-*" | while read dir; do
            last_modified=$(git log -1 --format="%at" -- "$dir")
            now=$(date +%s)
            age=$(( (now - last_modified) / 86400 ))
            if [ "$age" -gt 7 ]; then
              echo "🧹 Removing $dir (age: $age days)"
              rm -rf "$dir"
            fi
          done
          cp -r build-* ../target/gh-pages-publish/ || true
          cd ..

      - name: Generate aesthetic dashboard
        run: |
          echo "<html><head><title>Allure Report Dashboard</title><style>
          body{font-family:'Segoe UI',sans-serif;background:#f4f6f8;padding:2rem;}
          h1{text-align:center;color:#333;}
          .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:1rem;margin-top:2rem;}
          .card{background:white;border-radius:8px;padding:1rem;box-shadow:0 2px 6px rgba(0,0,0,0.1);transition:transform 0.2s;}
          .card:hover{transform:scale(1.02);}
          .card a{text-decoration:none;color:#0078d4;font-weight:bold;font-size:1.1rem;}
          .meta{font-size:0.85rem;color:#555;margin-top:0.5rem;}
          </style></head><body><h1>🧪 Allure Report Dashboard</h1><div class='grid'>" > target/gh-pages-publish/index.html

          for dir in target/gh-pages-publish/build-*; do
            build=$(basename "$dir")
            meta="$dir/metadata.json"
            if [ -f "$meta" ]; then
              bnum=$(jq -r .build "$meta")
              date=$(jq -r .date "$meta")
              status=$(jq -r .status "$meta")
              env=$(jq -r .environment "$meta")
              browser=$(jq -r .browser "$meta")
              echo "<div class='card'><a href='${build}/'>Build #${bnum}</a>
              <div class='meta'>📅 ${date}</div>
              <div class='meta'>${status} | 🌐 ${env} | 🧭 ${browser}</div></div>" >> target/gh-pages-publish/index.html
            fi
          done

          echo "</div></body></html>" >> target/gh-pages-publish/index.html

      - name: Deploy Allure Report and Dashboard
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/gh-pages-publish
          keep_files: false

      - name: Add Report Link to Summary
        run: echo "🔗 [View Allure Report](https://abharish480.github.io/BankAPIDemo_RestAssured/build-${{ steps.buildnum.outputs.build_number }}/)" >> $GITHUB_STEP_SUMMARY
